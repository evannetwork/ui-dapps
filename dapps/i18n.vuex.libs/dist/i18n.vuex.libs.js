(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("dapp-browser"));
	else if(typeof define === 'function' && define.amd)
		define("i18n.vuex.libs.js", ["dapp-browser"], factory);
	else if(typeof exports === 'object')
		exports["i18n.vuex.libs.js"] = factory(require("dapp-browser"));
	else
		root["i18n.vuex.libs.js"] = factory(root["dapp-browser"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE_dapp_browser__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../node_modules/vuex-i18n/dist/vuex-i18n.es.js":
/*!*******************************************************************************************************!*\
  !*** /Users/tschuck/projects/evan.network/ui/ui-vue-core/node_modules/vuex-i18n/dist/vuex-i18n.es.js ***!
  \*******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/* vuex-i18n-store defines a vuex module to store locale translations. Make sure\n** to also include the file vuex-i18n.js to enable easy access to localized\n** strings in your vue components.\n*/\n// define a simple vuex module to handle locale translations\nvar i18nVuexModule = {\n  namespaced: true,\n  state: {\n    locale: null,\n    fallback: null,\n    translations: {}\n  },\n  mutations: {\n    // set the current locale\n    SET_LOCALE: function SET_LOCALE(state, payload) {\n      state.locale = payload.locale;\n    },\n    // add a new locale\n    ADD_LOCALE: function ADD_LOCALE(state, payload) {\n      // reduce the given translations to a single-depth tree\n      var translations = flattenTranslations(payload.translations);\n\n      if (state.translations.hasOwnProperty(payload.locale)) {\n        // get the existing translations\n        var existingTranslations = state.translations[payload.locale]; // merge the translations\n\n        state.translations[payload.locale] = Object.assign({}, existingTranslations, translations);\n      } else {\n        // just set the locale if it does not yet exist\n        state.translations[payload.locale] = translations;\n      } // make sure to notify vue of changes (this might break with new vue versions)\n\n\n      try {\n        if (state.translations.__ob__) {\n          state.translations.__ob__.dep.notify();\n        }\n      } catch (ex) {}\n    },\n    // replace existing locale information with new translations\n    REPLACE_LOCALE: function REPLACE_LOCALE(state, payload) {\n      // reduce the given translations to a single-depth tree\n      var translations = flattenTranslations(payload.translations); // replace the translations entirely\n\n      state.translations[payload.locale] = translations; // make sure to notify vue of changes (this might break with new vue versions)\n\n      try {\n        if (state.translations.__ob__) {\n          state.translations.__ob__.dep.notify();\n        }\n      } catch (ex) {}\n    },\n    // remove a locale from the store\n    REMOVE_LOCALE: function REMOVE_LOCALE(state, payload) {\n      // check if the given locale is present in the state\n      if (state.translations.hasOwnProperty(payload.locale)) {\n        // check if the current locale is the given locale to remvoe\n        if (state.locale === payload.locale) {\n          // reset the current locale\n          state.locale = null;\n        } // create a copy of the translations object\n\n\n        var translationCopy = Object.assign({}, state.translations); // remove the given locale\n\n        delete translationCopy[payload.locale]; // set the state to the new object\n\n        state.translations = translationCopy;\n      }\n    },\n    SET_FALLBACK_LOCALE: function SET_FALLBACK_LOCALE(state, payload) {\n      state.fallback = payload.locale;\n    }\n  },\n  actions: {\n    // set the current locale\n    setLocale: function setLocale(context, payload) {\n      context.commit({\n        type: 'SET_LOCALE',\n        locale: payload.locale\n      });\n    },\n    // add or extend a locale with translations\n    addLocale: function addLocale(context, payload) {\n      context.commit({\n        type: 'ADD_LOCALE',\n        locale: payload.locale,\n        translations: payload.translations\n      });\n    },\n    // replace locale information\n    replaceLocale: function replaceLocale(context, payload) {\n      context.commit({\n        type: 'REPLACE_LOCALE',\n        locale: payload.locale,\n        translations: payload.translations\n      });\n    },\n    // remove the given locale translations\n    removeLocale: function removeLocale(context, payload) {\n      context.commit({\n        type: 'REMOVE_LOCALE',\n        locale: payload.locale,\n        translations: payload.translations\n      });\n    },\n    setFallbackLocale: function setFallbackLocale(context, payload) {\n      context.commit({\n        type: 'SET_FALLBACK_LOCALE',\n        locale: payload.locale\n      });\n    }\n  }\n}; // flattenTranslations will convert object trees for translations into a\n// single-depth object tree\n\nvar flattenTranslations = function flattenTranslations(translations) {\n  var toReturn = {};\n\n  for (var i in translations) {\n    // check if the property is present\n    if (!translations.hasOwnProperty(i)) {\n      continue;\n    } // get the type of the property\n\n\n    var objType = _typeof(translations[i]); // allow unflattened array of strings\n\n\n    if (isArray(translations[i])) {\n      var count = translations[i].length;\n\n      for (var index = 0; index < count; index++) {\n        var itemType = _typeof(translations[i][index]);\n\n        if (itemType !== 'string') {\n          console.warn('i18n:', 'currently only arrays of strings are fully supported', translations[i]);\n          break;\n        }\n      }\n\n      toReturn[i] = translations[i];\n    } else if (objType == 'object' && objType !== null) {\n      var flatObject = flattenTranslations(translations[i]);\n\n      for (var x in flatObject) {\n        if (!flatObject.hasOwnProperty(x)) continue;\n        toReturn[i + '.' + x] = flatObject[x];\n      }\n    } else {\n      toReturn[i] = translations[i];\n    }\n  }\n\n  return toReturn;\n}; // check if the given object is an array\n\n\nfunction isArray(obj) {\n  return !!obj && Array === obj.constructor;\n}\n\nvar plurals = {\n  getTranslationIndex: function getTranslationIndex(languageCode, n) {\n    switch (languageCode) {\n      case 'ay': // Aymará\n\n      case 'bo': // Tibetan\n\n      case 'cgg': // Chiga\n\n      case 'dz': // Dzongkha\n\n      case 'fa': // Persian\n\n      case 'id': // Indonesian\n\n      case 'ja': // Japanese\n\n      case 'jbo': // Lojban\n\n      case 'ka': // Georgian\n\n      case 'kk': // Kazakh\n\n      case 'km': // Khmer\n\n      case 'ko': // Korean\n\n      case 'ky': // Kyrgyz\n\n      case 'lo': // Lao\n\n      case 'ms': // Malay\n\n      case 'my': // Burmese\n\n      case 'sah': // Yakut\n\n      case 'su': // Sundanese\n\n      case 'th': // Thai\n\n      case 'tt': // Tatar\n\n      case 'ug': // Uyghur\n\n      case 'vi': // Vietnamese\n\n      case 'wo': // Wolof\n\n      case 'zh':\n        // Chinese\n        // 1 form\n        return 0;\n\n      case 'is':\n        // Icelandic\n        // 2 forms\n        return n % 10 !== 1 || n % 100 === 11 ? 1 : 0;\n\n      case 'jv':\n        // Javanese\n        // 2 forms\n        return n !== 0 ? 1 : 0;\n\n      case 'mk':\n        // Macedonian\n        // 2 forms\n        return n === 1 || n % 10 === 1 ? 0 : 1;\n\n      case 'ach': // Acholi\n\n      case 'ak': // Akan\n\n      case 'am': // Amharic\n\n      case 'arn': // Mapudungun\n\n      case 'br': // Breton\n\n      case 'fil': // Filipino\n\n      case 'fr': // French\n\n      case 'gun': // Gun\n\n      case 'ln': // Lingala\n\n      case 'mfe': // Mauritian Creole\n\n      case 'mg': // Malagasy\n\n      case 'mi': // Maori\n\n      case 'oc': // Occitan\n\n      case 'pt_BR': // Brazilian Portuguese\n\n      case 'tg': // Tajik\n\n      case 'ti': // Tigrinya\n\n      case 'tr': // Turkish\n\n      case 'uz': // Uzbek\n\n      case 'wa': // Walloon\n\n      /* eslint-disable */\n\n      /* Disable \"Duplicate case label\" because there are 2 forms of Chinese plurals */\n\n      case 'zh':\n        // Chinese\n\n        /* eslint-enable */\n        // 2 forms\n        return n > 1 ? 1 : 0;\n\n      case 'lv':\n        // Latvian\n        // 3 forms\n        return n % 10 === 1 && n % 100 !== 11 ? 0 : n !== 0 ? 1 : 2;\n\n      case 'lt':\n        // Lithuanian\n        // 3 forms\n        return n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2;\n\n      case 'be': // Belarusian\n\n      case 'bs': // Bosnian\n\n      case 'hr': // Croatian\n\n      case 'ru': // Russian\n\n      case 'sr': // Serbian\n\n      case 'uk':\n        // Ukrainian\n        // 3 forms\n        return n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2;\n\n      case 'mnk':\n        // Mandinka\n        // 3 forms\n        return n === 0 ? 0 : n === 1 ? 1 : 2;\n\n      case 'ro':\n        // Romanian\n        // 3 forms\n        return n === 1 ? 0 : n === 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2;\n\n      case 'pl':\n        // Polish\n        // 3 forms\n        return n === 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2;\n\n      case 'cs': // Czech\n\n      case 'sk':\n        // Slovak\n        // 3 forms\n        return n === 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2;\n\n      case 'csb':\n        // Kashubian\n        // 3 forms\n        return n === 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2;\n\n      case 'sl':\n        // Slovenian\n        // 4 forms\n        return n % 100 === 1 ? 0 : n % 100 === 2 ? 1 : n % 100 === 3 || n % 100 === 4 ? 2 : 3;\n\n      case 'mt':\n        // Maltese\n        // 4 forms\n        return n === 1 ? 0 : n === 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3;\n\n      case 'gd':\n        // Scottish Gaelic\n        // 4 forms\n        return n === 1 || n === 11 ? 0 : n === 2 || n === 12 ? 1 : n > 2 && n < 20 ? 2 : 3;\n\n      case 'cy':\n        // Welsh\n        // 4 forms\n        return n === 1 ? 0 : n === 2 ? 1 : n !== 8 && n !== 11 ? 2 : 3;\n\n      case 'kw':\n        // Cornish\n        // 4 forms\n        return n === 1 ? 0 : n === 2 ? 1 : n === 3 ? 2 : 3;\n\n      case 'ga':\n        // Irish\n        // 5 forms\n        return n === 1 ? 0 : n === 2 ? 1 : n > 2 && n < 7 ? 2 : n > 6 && n < 11 ? 3 : 4;\n\n      case 'ar':\n        // Arabic\n        // 6 forms\n        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n\n      default:\n        // Everything else\n        return n !== 1 ? 1 : 0;\n    }\n  }\n};\n\nvar VuexI18nPlugin = {}; // internationalization plugin for vue js using vuex\n\nVuexI18nPlugin.install = function install(Vue, store, config) {\n  // TODO: remove this block for next major update (API break)\n  if (typeof arguments[2] === 'string' || typeof arguments[3] === 'string') {\n    console.warn('i18n: Registering the plugin vuex-i18n with a string for `moduleName` or `identifiers` is deprecated. Use a configuration object instead.', 'https://github.com/dkfbasel/vuex-i18n#setup');\n    config = {\n      moduleName: arguments[2],\n      identifiers: arguments[3]\n    };\n  } // merge default options with user supplied options\n\n\n  config = Object.assign({\n    warnings: true,\n    moduleName: 'i18n',\n    identifiers: ['{', '}'],\n    preserveState: false,\n    translateFilterName: 'translate',\n    translateInFilterName: 'translateIn',\n    onTranslationNotFound: function onTranslationNotFound() {}\n  }, config); // define module name and identifiers as constants to prevent any changes\n\n  var moduleName = config.moduleName;\n  var identifiers = config.identifiers;\n  var translateFilterName = config.translateFilterName;\n  var translateInFilterName = config.translateInFilterName; // initialize the onTranslationNotFound function and make sure it is actually\n  // a function\n\n  var onTranslationNotFound = config.onTranslationNotFound;\n\n  if (typeof onTranslationNotFound !== 'function') {\n    console.error('i18n: i18n config option onTranslationNotFound must be a function');\n\n    onTranslationNotFound = function onTranslationNotFound() {};\n  } // register the i18n module in the vuex store\n  // preserveState can be used via configuration if server side rendering is used\n\n\n  store.registerModule(moduleName, i18nVuexModule, {\n    preserveState: config.preserveState\n  }); // check if the plugin was correctly initialized\n\n  if (store.state.hasOwnProperty(moduleName) === false) {\n    console.error('i18n: i18n vuex module is not correctly initialized. Please check the module name:', moduleName); // always return the key if module is not initialized correctly\n\n    Vue.prototype.$i18n = function (key) {\n      return key;\n    };\n\n    Vue.prototype.$getLanguage = function () {\n      return null;\n    };\n\n    Vue.prototype.$setLanguage = function () {\n      console.error('i18n: i18n vuex module is not correctly initialized');\n    };\n\n    return;\n  }\n\n  var render = renderFn(identifiers, config.warnings); // get localized string from store. note that we pass the arguments passed\n  // to the function directly to the translateInLanguage function\n\n  var translate = function $t() {\n    // get the current language from the store\n    var locale = store.state[moduleName].locale;\n    return translateInLanguage.apply(void 0, [locale].concat(Array.prototype.slice.call(arguments)));\n  }; // get localized string from store in a given language if available.\n  // there are two possible signatures for the function.\n  // we will check the arguments to make up the options passed.\n  // 1: locale, key, options, pluralization\n  // 2: locale, key, defaultValue, options, pluralization\n\n\n  var translateInLanguage = function translateInLanguage(locale) {\n    // read the function arguments\n    var args = arguments; // initialize options\n\n    var key = '';\n    var defaultValue = '';\n    var options = {};\n    var pluralization = null;\n    var count = args.length; // check if a default value was specified and fill options accordingly\n\n    if (count >= 3 && typeof args[2] === 'string') {\n      key = args[1];\n      defaultValue = args[2];\n\n      if (count > 3) {\n        options = args[3];\n      }\n\n      if (count > 4) {\n        pluralization = args[4];\n      }\n    } else {\n      key = args[1]; // default value was not specified and is therefore the same as the key\n\n      defaultValue = key;\n\n      if (count > 2) {\n        options = args[2];\n      }\n\n      if (count > 3) {\n        pluralization = args[3];\n      }\n    } // return the default value if the locale is not set (could happen on initialization)\n\n\n    if (!locale) {\n      if (config.warnings) console.warn('i18n: i18n locale is not set when trying to access translations:', key);\n      return defaultValue;\n    } // get the translations from the store\n\n\n    var translations = store.state[moduleName].translations; // get the last resort fallback from the store\n\n    var fallback = store.state[moduleName].fallback; // split locale by - to support partial fallback for regional locales\n    // like de-CH, en-UK\n\n    var localeRegional = locale.split('-'); // flag for translation to exist or not\n\n    var translationExists = true; // check if the language exists in the store. return the key if not\n\n    if (translations.hasOwnProperty(locale) === false) {\n      translationExists = false; // check if the key exists in the store. return the key if not\n    } else if (translations[locale].hasOwnProperty(key) === false) {\n      translationExists = false;\n    } // return the value from the store\n\n\n    if (translationExists === true) {\n      return render(locale, translations[locale][key], options, pluralization);\n    } // check if a regional locale translation would be available for the key\n    // i.e. de for de-CH\n\n\n    if (localeRegional.length > 1 && translations.hasOwnProperty(localeRegional[0]) === true && translations[localeRegional[0]].hasOwnProperty(key) === true) {\n      return render(localeRegional[0], translations[localeRegional[0]][key], options, pluralization);\n    } // invoke a method if a translation is not found\n\n\n    var asyncTranslation = onTranslationNotFound(locale, key, defaultValue); // resolve async translations by updating the store\n\n    if (asyncTranslation) {\n      Promise.resolve(asyncTranslation).then(function (value) {\n        var additionalTranslations = {};\n        additionalTranslations[key] = value;\n        addLocale(locale, additionalTranslations);\n      });\n    } // check if a vaild fallback exists in the store.\n    // return the default value if not\n\n\n    if (translations.hasOwnProperty(fallback) === false) {\n      return render(locale, defaultValue, options, pluralization);\n    } // check if the key exists in the fallback locale in the store.\n    // return the default value if not\n\n\n    if (translations[fallback].hasOwnProperty(key) === false) {\n      return render(fallback, defaultValue, options, pluralization);\n    }\n\n    return render(locale, translations[fallback][key], options, pluralization);\n  }; // add a filter function to translate in a given locale (i.e. {{ 'something' | translateIn('en') }})\n\n\n  var translateInLanguageFilter = function translateInLanguageFilter(key, locale) {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return translateInLanguage.apply(void 0, [locale, key].concat(args));\n  }; // check if the given key exists in the current locale\n\n\n  var checkKeyExists = function checkKeyExists(key) {\n    var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'fallback';\n    // get the current language from the store\n    var locale = store.state[moduleName].locale;\n    var fallback = store.state[moduleName].fallback;\n    var translations = store.state[moduleName].translations; // check the current translation\n\n    if (translations.hasOwnProperty(locale) && translations[locale].hasOwnProperty(key)) {\n      return true;\n    }\n\n    if (scope == 'strict') {\n      return false;\n    } // check any localized translations\n\n\n    var localeRegional = locale.split('-');\n\n    if (localeRegional.length > 1 && translations.hasOwnProperty(localeRegional[0]) && translations[localeRegional[0]].hasOwnProperty(key)) {\n      return true;\n    }\n\n    if (scope == 'locale') {\n      return false;\n    } // check if a fallback locale exists\n\n\n    if (translations.hasOwnProperty(fallback) && translations[fallback].hasOwnProperty(key)) {\n      return true;\n    } // key does not exist in the store\n\n\n    return false;\n  }; // set fallback locale\n\n\n  var setFallbackLocale = function setFallbackLocale(locale) {\n    store.dispatch({\n      type: \"\".concat(moduleName, \"/setFallbackLocale\"),\n      locale: locale\n    });\n  }; // set the current locale\n\n\n  var setLocale = function setLocale(locale) {\n    store.dispatch({\n      type: \"\".concat(moduleName, \"/setLocale\"),\n      locale: locale\n    });\n  }; // get the current locale\n\n\n  var getLocale = function getLocale() {\n    return store.state[moduleName].locale;\n  }; // get all available locales\n\n\n  var getLocales = function getLocales() {\n    return Object.keys(store.state[moduleName].translations);\n  }; // add predefined translations to the store (keeping existing information)\n\n\n  var addLocale = function addLocale(locale, translations) {\n    return store.dispatch({\n      type: \"\".concat(moduleName, \"/addLocale\"),\n      locale: locale,\n      translations: translations\n    });\n  }; // replace all locale information in the store\n\n\n  var replaceLocale = function replaceLocale(locale, translations) {\n    return store.dispatch({\n      type: \"\".concat(moduleName, \"/replaceLocale\"),\n      locale: locale,\n      translations: translations\n    });\n  }; // remove the givne locale from the store\n\n\n  var removeLocale = function removeLocale(locale) {\n    if (store.state[moduleName].translations.hasOwnProperty(locale)) {\n      store.dispatch({\n        type: \"\".concat(moduleName, \"/removeLocale\"),\n        locale: locale\n      });\n    }\n  }; // we are phasing out the exists function\n\n\n  var phaseOutExistsFn = function phaseOutExistsFn(locale) {\n    if (config.warnings) console.warn('i18n: $i18n.exists is depreceated. Please use $i18n.localeExists instead. It provides exactly the same functionality.');\n    return checkLocaleExists(locale);\n  }; // check if the given locale is already loaded\n\n\n  var checkLocaleExists = function checkLocaleExists(locale) {\n    return store.state[moduleName].translations.hasOwnProperty(locale);\n  }; // register vue prototype methods\n\n\n  Vue.prototype.$i18n = {\n    locale: getLocale,\n    locales: getLocales,\n    set: setLocale,\n    add: addLocale,\n    replace: replaceLocale,\n    remove: removeLocale,\n    fallback: setFallbackLocale,\n    localeExists: checkLocaleExists,\n    keyExists: checkKeyExists,\n    translate: translate,\n    translateIn: translateInLanguage,\n    exists: phaseOutExistsFn\n  }; // register global methods\n\n  Vue.i18n = {\n    locale: getLocale,\n    locales: getLocales,\n    set: setLocale,\n    add: addLocale,\n    replace: replaceLocale,\n    remove: removeLocale,\n    fallback: setFallbackLocale,\n    translate: translate,\n    translateIn: translateInLanguage,\n    localeExists: checkLocaleExists,\n    keyExists: checkKeyExists,\n    exists: phaseOutExistsFn\n  }; // register the translation function on the vue instance directly\n\n  Vue.prototype.$t = translate; // register the specific language translation function on the vue instance directly\n\n  Vue.prototype.$tlang = translateInLanguage; // register a filter function for translations\n\n  Vue.filter(translateFilterName, translate);\n  Vue.filter(translateInFilterName, translateInLanguageFilter);\n}; // renderFn will initialize a function to render the variable substitutions in\n// the translation string. identifiers specify the tags will be used to find\n// variable substitutions, i.e. {test} or {{test}}, note that we are using a\n// closure to avoid recompilation of the regular expression to match tags on\n// every render cycle.\n\n\nvar renderFn = function renderFn(identifiers) {\n  var warnings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (identifiers == null || identifiers.length != 2) {\n    console.warn('i18n: You must specify the start and end character identifying variable substitutions');\n  } // construct a regular expression ot find variable substitutions, i.e. {test}\n\n\n  var matcher = new RegExp('' + identifiers[0] + '{1}(\\\\w{1}|\\\\w.+?)' + identifiers[1] + '{1}', 'g'); // define the replacement function\n\n  var replace = function replace(translation, replacements) {\n    // check if the object has a replace property\n    if (!translation.replace) {\n      return translation;\n    }\n\n    return translation.replace(matcher, function (placeholder) {\n      // remove the identifiers (can be set on the module level)\n      var key = placeholder.replace(identifiers[0], '').replace(identifiers[1], '');\n\n      if (replacements[key] !== undefined) {\n        return replacements[key];\n      } // warn user that the placeholder has not been found\n\n\n      if (warnings) {\n        console.group ? console.group('i18n: Not all placeholders found') : console.warn('i18n: Not all placeholders found');\n        console.warn('Text:', translation);\n        console.warn('Placeholder:', placeholder);\n\n        if (console.groupEnd) {\n          console.groupEnd();\n        }\n      } // return the original placeholder\n\n\n      return placeholder;\n    });\n  }; // the render function will replace variable substitutions and prepare the\n  // translations for rendering\n\n\n  var render = function render(locale, translation) {\n    var replacements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var pluralization = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    // get the type of the property\n    var objType = _typeof(translation);\n\n    var pluralizationType = _typeof(pluralization);\n\n    var resolvePlaceholders = function resolvePlaceholders() {\n      if (isArray$1(translation)) {\n        // replace the placeholder elements in all sub-items\n        return translation.map(function (item) {\n          return replace(item, replacements, false);\n        });\n      } else if (objType === 'string') {\n        return replace(translation, replacements, true);\n      }\n    }; // return translation item directly\n\n\n    if (pluralization === null) {\n      return resolvePlaceholders();\n    } // check if pluralization value is countable\n\n\n    if (pluralizationType !== 'number') {\n      if (warnings) console.warn('i18n: pluralization is not a number');\n      return resolvePlaceholders();\n    } // --- handle pluralizations ---\n    // replace all placeholders\n\n\n    var resolvedTranslation = resolvePlaceholders(); // initialize pluralizations\n\n    var pluralizations = null; // if translations are already an array and have more than one entry,\n    // we will not perform a split operation on :::\n\n    if (isArray$1(resolvedTranslation) && resolvedTranslation.length > 0) {\n      pluralizations = resolvedTranslation;\n    } else {\n      // split translation strings by ::: to find create the pluralization array\n      pluralizations = resolvedTranslation.split(':::');\n    } // determine the pluralization version to use by locale\n\n\n    var index = plurals.getTranslationIndex(locale, pluralization); // check if the specified index is present in the pluralization\n\n    if (typeof pluralizations[index] === 'undefined') {\n      if (warnings) {\n        console.warn('i18n: pluralization not provided in locale', translation, locale, index);\n      } // return the first element of the pluralization by default\n\n\n      return pluralizations[0].trim();\n    } // return the requested item from the pluralizations\n\n\n    return pluralizations[index].trim();\n  }; // return the render function to the caller\n\n\n  return render;\n}; // check if the given object is an array\n\n\nfunction isArray$1(obj) {\n  return !!obj && Array === obj.constructor;\n}\n\n// import the vuex module for localization\n\nvar index = {\n  store: i18nVuexModule,\n  plugin: VuexI18nPlugin\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/vuex-i18n/dist/vuex-i18n.es.js\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var dapp_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dapp-browser */ \"dapp-browser\");\n/* harmony import */ var dapp_browser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dapp_browser__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vuex_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vuex-i18n */ \"../../node_modules/vuex-i18n/dist/vuex-i18n.es.js\");\n/*\n  Copyright (C) 2018-present evan GmbH.\n\n  This program is free software: you can redistribute it and/or modify it\n  under the terms of the GNU Affero General Public License, version 3,\n  as published by the Free Software Foundation.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n  See the GNU Affero General Public License for more details.\n\n  You should have received a copy of the GNU Affero General Public License\n  along with this program. If not, see http://www.gnu.org/licenses/ or\n  write to the Free Software Foundation, Inc., 51 Franklin Street,\n  Fifth Floor, Boston, MA, 02110-1301 USA, or download the license from\n  the following URL: https://evan.network/license/\n\n  You can be released from the requirements of the GNU Affero General Public\n  License by purchasing a commercial license.\n  Buying such a license is mandatory as soon as you use this software or parts\n  of it on other blockchains than evan.network.\n\n  For more information, please contact evan GmbH at this address:\n  https://evan.network/license/\n*/\n// map the original vue path to i18n.vuex.libs\n\ndapp_browser__WEBPACK_IMPORTED_MODULE_0__[\"System\"].map['vuex-i18n'] = \"i18n.vuex.libs.\" + Object(dapp_browser__WEBPACK_IMPORTED_MODULE_0__[\"getDomainName\"])() + \"!dapp-content\";\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (vuex_i18n__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pMThuLnZ1ZXgubGlicy5qcy8uL3NyYy9pbmRleC50cz9mZmI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUF5QkU7QUFDRiw4Q0FBOEM7QUFDTztBQUNyRCxtREFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsR0FBRyxvQkFBbUIsa0VBQWEsRUFBRSxrQkFBZ0IsQ0FBQztBQUU1QztBQUNsQixnSEFBUSxFQUFDIiwiZmlsZSI6Ii4vc3JjL2luZGV4LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAgQ29weXJpZ2h0IChDKSAyMDE4LXByZXNlbnQgZXZhbiBHbWJILlxuXG4gIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5IGl0XG4gIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlLCB2ZXJzaW9uIDMsXG4gIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLlxuXG4gIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuXG4gIFNlZSB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbiAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiBJZiBub3QsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvIG9yXG4gIHdyaXRlIHRvIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIEluYy4sIDUxIEZyYW5rbGluIFN0cmVldCxcbiAgRmlmdGggRmxvb3IsIEJvc3RvbiwgTUEsIDAyMTEwLTEzMDEgVVNBLCBvciBkb3dubG9hZCB0aGUgbGljZW5zZSBmcm9tXG4gIHRoZSBmb2xsb3dpbmcgVVJMOiBodHRwczovL2V2YW4ubmV0d29yay9saWNlbnNlL1xuXG4gIFlvdSBjYW4gYmUgcmVsZWFzZWQgZnJvbSB0aGUgcmVxdWlyZW1lbnRzIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljXG4gIExpY2Vuc2UgYnkgcHVyY2hhc2luZyBhIGNvbW1lcmNpYWwgbGljZW5zZS5cbiAgQnV5aW5nIHN1Y2ggYSBsaWNlbnNlIGlzIG1hbmRhdG9yeSBhcyBzb29uIGFzIHlvdSB1c2UgdGhpcyBzb2Z0d2FyZSBvciBwYXJ0c1xuICBvZiBpdCBvbiBvdGhlciBibG9ja2NoYWlucyB0aGFuIGV2YW4ubmV0d29yay5cblxuICBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgcGxlYXNlIGNvbnRhY3QgZXZhbiBHbWJIIGF0IHRoaXMgYWRkcmVzczpcbiAgaHR0cHM6Ly9ldmFuLm5ldHdvcmsvbGljZW5zZS9cbiovXG4vLyBtYXAgdGhlIG9yaWdpbmFsIHZ1ZSBwYXRoIHRvIGkxOG4udnVleC5saWJzXG5pbXBvcnQgeyBTeXN0ZW0sIGdldERvbWFpbk5hbWUgfSBmcm9tICdkYXBwLWJyb3dzZXInO1xuU3lzdGVtLm1hcFsndnVleC1pMThuJ10gPSBgaTE4bi52dWV4LmxpYnMuJHsgZ2V0RG9tYWluTmFtZSgpIH0hZGFwcC1jb250ZW50YDtcblxuaW1wb3J0IHZ1ZXhJMThuIGZyb20gJ3Z1ZXgtaTE4bic7XG5leHBvcnQgZGVmYXVsdCB2dWV4STE4bjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ }),

/***/ "dapp-browser":
/*!*******************************!*\
  !*** external "dapp-browser" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_dapp_browser__;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pMThuLnZ1ZXgubGlicy5qcy9leHRlcm5hbCBcImRhcHAtYnJvd3NlclwiPzRkYzgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiZGFwcC1icm93c2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX2RhcHBfYnJvd3Nlcl9fOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///dapp-browser\n");

/***/ })

/******/ });
});