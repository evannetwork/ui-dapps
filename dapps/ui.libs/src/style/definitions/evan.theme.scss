/*
  Copyright (C) 2018-present evan GmbH.

  This program is free software: you can redistribute it and/or modify it
  under the terms of the GNU Affero General Public License, version 3,
  as published by the Free Software Foundation.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Affero General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with this program. If not, see http://www.gnu.org/licenses/ or
  write to the Free Software Foundation, Inc., 51 Franklin Street,
  Fifth Floor, Boston, MA, 02110-1301 USA, or download the license from
  the following URL: https://evan.network/license/
*/

@import '../utils.scss';

/**
 * gray scales
 */
$themeEvan: (
  black: #000000,
  gray-100: #f8f9fa,
  gray-150: #f5f6fa,
  gray-200: #e9ecef,
  gray-300: #dee2e6,
  gray-400: #ced4da,
  gray-500: #adb5bd,
  gray-600: #6c757d,
  gray-700: #495057,
  gray-800: #343a40,
  gray-900: #212529
);

/**
 * color definitions
 */
$themeEvan: map-merge(
  (
    blue: #0080da,
    cyan: #46C2BF,
    green: #28a745,
    indigo: #6610f2,
    orange: #fd7e14,
    pink: #e10098,
    purple: #6f42c1,
    red: #dc3545,
    teal: #20c997,
    white: #ffffff,
    yellow: #ffc107
  ),
  $themeEvan
);

/**
 * darken color definitions
 */
$themeEvan: map-merge(
  (
    black-darken: darken(map-get($themeEvan, black), 10%),
    blue-darken: darken(map-get($themeEvan, blue), 10%),
    cyan-darken: darken(map-get($themeEvan, cyan), 10%),
    gray-100-darken: darken(map-get($themeEvan, gray-100), 10%),
    gray-150-darken: darken(map-get($themeEvan, gray-150), 10%),
    gray-200-darken: darken(map-get($themeEvan, gray-200), 10%),
    gray-300-darken: darken(map-get($themeEvan, gray-300), 10%),
    gray-400-darken: darken(map-get($themeEvan, gray-400), 10%),
    gray-500-darken: darken(map-get($themeEvan, gray-500), 10%),
    gray-600-darken: darken(map-get($themeEvan, gray-600), 10%),
    gray-700-darken: darken(map-get($themeEvan, gray-700), 10%),
    gray-800-darken: darken(map-get($themeEvan, gray-800), 10%),
    gray-900-darken: darken(map-get($themeEvan, gray-900), 10%),
    green-darken: darken(map-get($themeEvan, green), 10%),
    indigo-darken: darken(map-get($themeEvan, indigo), 10%),
    orange-darken: darken(map-get($themeEvan, orange), 10%),
    pink-darken: darken(map-get($themeEvan, pink), 10%),
    purple-darken: darken(map-get($themeEvan, purple), 10%),
    red-darken: darken(map-get($themeEvan, red), 10%),
    teal-darken: darken(map-get($themeEvan, teal), 10%),
    white-darken: darken(map-get($themeEvan, white), 10%),
    yellow-darken: darken(map-get($themeEvan, yellow), 10%),
  ),
  $themeEvan
);

/**
 * lighten color definitions
 */
$themeEvan: map-merge(
  (
    black-lighten: lighten(map-get($themeEvan, black), 35%),
    blue-lighten: lighten(map-get($themeEvan, blue), 35%),
    cyan-lighten: lighten(map-get($themeEvan, cyan), 35%),
    gray-100-lighten: lighten(map-get($themeEvan, gray-100), 35%),
    gray-150-lighten: lighten(map-get($themeEvan, gray-150), 35%),
    gray-200-lighten: lighten(map-get($themeEvan, gray-200), 35%),
    gray-300-lighten: lighten(map-get($themeEvan, gray-300), 35%),
    gray-400-lighten: lighten(map-get($themeEvan, gray-400), 35%),
    gray-500-lighten: lighten(map-get($themeEvan, gray-500), 35%),
    gray-600-lighten: lighten(map-get($themeEvan, gray-600), 35%),
    gray-700-lighten: lighten(map-get($themeEvan, gray-700), 35%),
    gray-800-lighten: lighten(map-get($themeEvan, gray-800), 35%),
    gray-900-lighten: lighten(map-get($themeEvan, gray-900), 35%),
    green-lighten: lighten(map-get($themeEvan, green), 35%),
    indigo-lighten: lighten(map-get($themeEvan, indigo), 35%),
    orange-lighten: lighten(map-get($themeEvan, orange), 35%),
    pink-lighten: lighten(map-get($themeEvan, pink), 35%),
    purple-lighten: lighten(map-get($themeEvan, purple), 35%),
    red-lighten: lighten(map-get($themeEvan, red), 35%),
    teal-lighten: lighten(map-get($themeEvan, teal), 35%),
    white-lighten: lighten(map-get($themeEvan, white), 35%),
    yellow-lighten: lighten(map-get($themeEvan, yellow), 35%),
  ),
  $themeEvan
);

/**
 * theme colors
 */
$theme-colors: (
  danger: cssVar('red'),
  dark: #00313C,
  info: cssVar('blue'),
  light: cssVar('gray-200'),
  primary: cssVar('cyan'),
  disabled: '#CED4DA',
  secondary: cssVar('pink'),
  success: cssVar('green'),
  warning: cssVar('yellow'),
);
$themeEvan: map-merge($themeEvan, $theme-colors);
$themeEvan: map-merge(
  (
    danger-darken: cssVar('red-darken'),
    danger-lighten: cssVar('red-lighten'),
    dark-darken: darken(#023845, 10%),
    dark-lighten: lighten(#023845, 10%),
    info-darken: cssVar('blue-darken'),
    info-lighten: cssVar('blue-lighten'),
    light-darken: cssVar('gray-200-darken'),
    light-lighten: cssVar('gray-200-lighten'),
    primary-darken: cssVar('cyan-darken'),
    primary-lighten: cssVar('cyan-lighten'),
    secondary-darken: cssVar('pink-darken'),
    secondary-lighten: cssVar('pink-lighten'),
    success-darken: cssVar('green-darken'),
    success-lighten: cssVar('green-lighten'),
    warning-darken: cssVar('yellow-darken'),
    warning-lighten: cssVar('yellow-lighten'),
  ),
  $themeEvan
);

/**
 * evan customs
 */
$themeEvan: map-merge(
  (
    bg-level-1: cssVar('white'),
    bg-level-2: cssVar('gray-150'),
    bg-level-3: #f5f6fa,
    bg-inverted: cssVar('dark'),
    tab-color-1: cssVar('primary'),
    tab-color-2: #24545e,
    tab-color-3: #8b9a9e,
    tab-color-4: #698a88,
    tab-color-5: #c0d4d8,
  ),
  $themeEvan
);

/**
 * elements
 */
$themeEvan: map-merge(
  (
    body-bg: cssVar('bg-level-1'),
    body-color: cssVar('bg-inverted'),
    border-color: #dce0e1,
    border-color-2: #e5e9f2,
    btn-primary-hover: cssVar('primary'),
    btn-secondary-hover: 'transparent',
    font-family-sans-serif: ('Open Sans', sans-serif),
    table-hover: cssVar('gray-200'),
    table-row-odd: cssVar('bg-level-1'),
    table-row-even: #f4f7f9,
    tooltip-color: cssVar('white'),
    tooltip-bg: cssVar('bg-inverted'),
    tooltip-border: cssVar('bg-inverted'),
    tooltip-shadow: transparent,
    tooltip-arrow-color: cssVar('bg-inverted'),
    swipe-panel-size: 400px
  ),
  $themeEvan
);

/**
 * text-colors
 */
$themeEvan: map-merge(
  (
    bg-text-danger: cssVar('white'),
    bg-text-dark: cssVar('white'),
    bg-text-info: cssVar('white'),
    bg-text-light: cssVar('black'),
    bg-text-primary: cssVar('white'),
    bg-text-secondary: cssVar('white'),
    bg-text-success: cssVar('white'),
    bg-text-warning: cssVar('white'),
    input-placeholder-color: cssVar('gray-400'),
    text-color-inverted: cssVar('white'),
    text-color: cssVar('black'),
    text-muted: cssVar('gray-500'),
    yiq-text-dark: cssVar('text-color'),
    yiq-text-light: cssVar('text-color-inverted')
  ),
  $themeEvan
);

/**
 * dapp-wrapper
 */
$themeEvan: map-merge(
  (
    // dapp-wrapper
    dapp-wrapper-sidepanel-icon-color: cssVar('white'),
    dapp-wrapper-sidepanel-list-active: cssVar('white'),
    dapp-wrapper-sidepanel-shadow: 1px 0 20px rgba(0, 0, 0, 0.15),
  ),
  $themeEvan
);

/**
 * text sizes
 */
$themeEvan: map-merge(
  (
    h1-font-size:    2.250em,   // 36px / 2.250em / 2.250rem
    h2-font-size:    1.750em,   // 28px / 1.750em / 1.750rem
    h3-font-size:    21px   ,   // 21px / 1.313em / 1.313rem
    h4-font-size:    18px   ,   // 18px / 1.125em / 1.125rem
    h5-font-size:    16px   ,   // 16px / 1em     / 1rem
    h6-font-size:    15px   ,   // 15px / 0.938em / 0.938rem
    text-font-size:  14px   ,   // 14px / 0.875em
    small-font-size: 12px   ,
  ),
  $themeEvan
);

@mixin themeEvan() {
  .theme-evan {
    @include evanVariables($themeEvan);
  }
}
