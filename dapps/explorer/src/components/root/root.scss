/*
  Copyright (C) 2018-present evan GmbH.

  This program is free software: you can redistribute it and/or modify it
  under the terms of the GNU Affero General Public License, version 3,
  as published by the Free Software Foundation.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Affero General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with this program. If not, see http://www.gnu.org/licenses/ or
  write to the Free Software Foundation, Inc., 51 Franklin Street,
  Fifth Floor, Boston, MA, 02110-1301 USA, or download the license from
  the following URL: https://evan.network/license/
*/
.evan-explorer {
  evan-split-pane {
    &.disable-side-panel {
      ion-split-pane.split-pane {
        display: block;
      }
    }

    ion-split-pane {
      & > ion-menu {
        ion-content {
          & > .scroll-content, & > .fixed-content {
            margin-top: 56px;
          }
        }
      }

      & > ion-content > .scroll-content > div[evan-content] {
        &, & > div {
          height: 100%;
        }
      }

      ion-menu ion-header {
        cursor: default;

        .dapp-name {
          display: flex;

          button {
            position: relative !important;

            display: flex;

            min-width: 35px !important;
            height: 56px;
          }

          h4 {
            line-height: 34px;

            overflow: hidden;

            width: calc(100% - 40px);
            margin-left: 20px;

            text-align: left;
            white-space: nowrap;
            text-overflow: ellipsis;
          }
        }
      }

      /* show when configuration-box is their for a backdrop effect*/
      .configuration-backdrop {
        position: absolute;
        z-index: -1;

        width: 100%;
        height: 100%;

        transition: all ease-in-out 0.5s;

        &.visible {
          z-index: 50;
        }
      }

      /* configueation box*/
      .configuration-box {
        position: absolute;
        z-index: 100;

        overflow-y: hidden;

        transition: all ease-in-out 0.5s;

        border-radius: 10px;

        /* use specific sizes to handle correct move upwards animation */
        @media (min-width: 769px) {
          height: 610px !important;
          margin-top: -610px;
        }

        @media (max-width: 768px) {
          height: 710px !important;
          margin-top: -710px;
        }

        /* the config box is always visible, but not within the viewport, move it down, when it
               should be visible */
        &.visible {
          overflow-y: visible;

          height: auto !important;

          @media (min-width: 769px) {
            margin-top: -70px;
          }

          @media (max-width: 768px) {
            margin-top: -50px;
          }
        }

        .checkbox-label {
          margin-top: 11px !important;
        }

        textarea {
          resize: none;
        }

        /* close configuration dialog */
        button.configuration-close {
          position: absolute;
          right: 0;
          bottom: -10px;
          left: 0;

          margin: auto;
        }
      }
    }
  }

  /* top positioned button to enable configuration dialog */
  button.configuration-open {
    position: absolute;
    z-index: 10;
    top: -10px;
    right: 0;
    left: 0;

    margin: auto;
  }

  .explorer-tabs.evan-tabs {
    margin-top: 40px;
    margin-bottom: 3px;

    @media (max-width: 768px) {
      margin-bottom: 0;
    }

    button .button-inner {
      line-height: 50px;
    }
  }

  .explorer-tabs.evan-tabs-container {
    & > div {
      margin-top: 0;
      padding-top: 0;

      @media (min-width: 769px) {
        width: calc(100% - 50px);
        margin-left: 25px;
      }
    }
  }

  .top-right-info {
    position: absolute;
    z-index: 1;
    top: 25px;
    right: 25px;
  }

  .ace_editor {
    overflow: auto;

    width: 100%;
  }
}

@mixin customTheme($colors, $theme) {
  .evan-explorer {
    &, evan-split-pane {
      ion-split-pane {
        ion-menu ion-header {
          &:hover {
            background-color: map-get($theme, background-color);
          }
        }
      }
    }

    /* show when configuration-box is their for a backdrop effect*/
    .configuration-backdrop {
      &.visible {
        background-color: rgba(0, 0, 0, 0.4);
      }
    }

    /* configueation box*/
    .configuration-box {
      /* close configuration dialog */
      button.configuration-close {
        background-color: map-get($theme, primary);
      }
    }

    /* top positioned button to enable configuration dialog */
    button.configuration-open {
      background-color: map-get($colors, primary);
      box-shadow: 0 0 8px 0 map-get($theme, background-color);
    }

    ion-item.item-md.item-block .item-inner {
      border-bottom-color: map-get($theme, background-color-2 !important);
    }

    .top-right-info {
      color: map-get($colors, light-gray);
    }

    .ace_editor {
      &, .ace_gutter {
        background-color: map-get($theme, background-color);
      }

      .ace_marker-layer {
        .ace_active-line {
          background-color: map-get($theme, background-color-2);
        }

        .ace_selection {
          background-color: #4e9894;
        }
      }

      .ace_active-line, .ace_line {
        color: map-get($theme, text-color);
      }
    }
  }
}

// apply custom styles for all themes
@import '@evan.network/ui-angular-sass/src/theme';
@each $theme, $definition in $evanThemes {
  @if $theme == 'evan' {
    @include customTheme(map-get($definition, colors), map-get($definition, evanStyles));
  } @else {
    .evan-#{$theme} {
      @include customTheme(map-get($definition, colors), map-get($definition, evanStyles));
    }
  }
}
